import{_ as a,o as n,c as l,N as p}from"./chunks/framework.b71846ef.js";const y=JSON.parse('{"title":"Monorepo","description":"","frontmatter":{},"headers":[],"relativePath":"capital/engineering/monorepo.md","lastUpdated":1728458292000}'),e={name:"capital/engineering/monorepo.md"};function o(c,s,r,t,i,d){return n(),l("div",null,s[0]||(s[0]=[p(`<h1 id="monorepo" tabindex="-1">Monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;Monorepo&quot;">​</a></h1><p><code>Monorepo</code> 就是把多个项目放在一个仓库里面，相对立的是传统的 <code>MultiRepo</code> 模式，即每个项目对应一个单独的仓库来分散管理。</p><h2 id="monorepo-和-multi-repo" tabindex="-1"><code>Monorepo</code> 和 <code>Multi-Repo</code> <a class="header-anchor" href="#monorepo-和-multi-repo" aria-label="Permalink to &quot;\`Monorepo\` 和 \`Multi-Repo\`&quot;">​</a></h2><p><code>Monorepo</code> 和 <code>Multi-Repo</code> 是两种项目管理方式，其区别如下：</p><ul><li><p><code>Monorepo</code> 是使用一个 <code>Git</code> 仓库管理多个项目</p></li><li><p><code>Multi-Repo</code> 是使用多个 <code>Git</code> 仓库管理多个项目，即一个项目对应一个仓库</p></li></ul><p><code>Monorepo</code> 的目录结构</p><p>一般 <code>Monorepo</code> 的目录如下所示，在 <code>packages</code> 存放多个子项目，并且每个子项目都有自己的<code>package.json</code>:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pkg1</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pkg2</span></span>
<span class="line"><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;">   </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>MultiRepo</code> 的目录结构</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">└─</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">multi-repo</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="monorepo-优缺点" tabindex="-1"><code>Monorepo</code> 优缺点 <a class="header-anchor" href="#monorepo-优缺点" aria-label="Permalink to &quot;\`Monorepo\` 优缺点&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">优点</p><ul><li><p>代码和资源复用 各个子包之间可以轻松地共享代码、工具类、组件等资源，有助于减少代码冗余，提高代码的复用性</p></li><li><p>一致的版本管理 可以统一管理所有项目的版本号，确保它们之间的兼容性，而不会出现不同仓库之间的版本冲突</p></li><li><p>集中的构建和部署 可以设置统一的构建和部署流程，减少了配置和管理的复杂性，这有助于确保所有项目的构建和部署方式保持一致</p></li><li><p>便于协作 促进了跨项目的协作，开发团队可以更容易地查看、修改和协作各个项目</p></li><li><p>更好的项目管理 通过单一代码仓库，项目管理变得更加直观。您可以使用版本控制系统的分支和标签来管理不同的项目或版本，从而简化了项目的追踪和管理</p></li><li><p>测试和集成更容易 更轻松地进行整体测试和集成测试，不需要跨多个仓库协调测试</p></li></ul></div><div class="warning custom-block"><p class="custom-block-title">缺点</p><ul><li><p>仓库大小增长 随着项目的增多，可能会导致仓库变得庞大且难以管理从而需要额外的存储和维护成本</p></li><li><p>构建时间增加 由于存在多个项目，当构建整个项目时可能需要更长的时间，尤其是当只有部分项目发生更改时</p></li><li><p>依赖管理复杂性 多个项目依赖于相同的第三方库时可能会导致依赖管理的复杂性，在确保所有项目都使用相同的依赖版本需要额外的努力</p></li><li><p>分支管理复杂性 管理多个项目的分支和合并请求可能会变得复杂，需要谨慎的规划和流程</p></li></ul></div><h2 id="搭建-monorepo-项目" tabindex="-1">搭建 <code>Monorepo</code> 项目 <a class="header-anchor" href="#搭建-monorepo-项目" aria-label="Permalink to &quot;搭建 \`Monorepo\` 项目&quot;">​</a></h2><ul><li><p>使用 <code>pnpm/npm/yarn</code> 的 <code>workspace</code> 功能</p></li><li><p>再搭配 <code>Monorepo</code> 管理工具</p><ul><li><p><a href="https://pnpm.io/" target="_blank" rel="noreferrer"><u><code>pnpm</code></u></a></p></li><li><p><a href="https://lerna.js.org/" target="_blank" rel="noreferrer"><u><code>lerna</code></u></a></p></li></ul></li></ul><p>目前主流的方式是使用 <code>pnpm</code> 来做 <code>Monorepo</code>，其无须使用第三方工具就可以进行管理</p><h3 id="安装-pnpm" tabindex="-1">安装 <code>pnpm</code> <a class="header-anchor" href="#安装-pnpm" aria-label="Permalink to &quot;安装 \`pnpm\`&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="配置-pnpm-工作空间" tabindex="-1">配置 <code>pnpm</code> 工作空间 <a class="header-anchor" href="#配置-pnpm-工作空间" aria-label="Permalink to &quot;配置 \`pnpm\` 工作空间&quot;">​</a></h3><p>新建一个<code>pnpm-workspace.yaml</code>，这个文件定义了 工作空间的根目录，并能够使您从工作空间中包含 / 排除目录 。 默认情况下，包含所有子目录。</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># pnpm-workspace.yaml</span></span>
<span class="line"><span style="color:#F07178;">packages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packages/*</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="info custom-block"><p class="custom-block-title">相关资料</p><ul><li><a href="https://pnpm.io/zh/pnpm-workspace_yaml" target="_blank" rel="noreferrer"><u><code>pnpm-workspace</code></u></a></li></ul></div><p>目录结构</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages1</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages2</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm-workspace.yaml</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p>在 <code>Monorepo</code> 项目中，依赖分为三种：</p><ul><li>公共依赖 在主包根目录下安装的依赖，会被所有子包继承</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">react</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果是开发依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rollup</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-wD</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>私有依赖 在子包中安装的依赖，只会在当前子包中生效</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">axios</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>模块之间的相互依赖</li></ul><p>比如在 <code>packages1</code> 中引用 <code>packages2</code></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages2</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">packages1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时我们查看 <code>packages1</code> 的 <code>package.json</code>，可以看到 <code>dependencies</code> 字段中多了对 <code>packages2</code> 的引用，以 <code>workspace:</code> 开头，后面跟着具体的版本号</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">packages1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">packages2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">workspace:^1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">axios</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^0.27.2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">命令</p><ul><li><p><code>-D</code> 表示安装开发依赖</p></li><li><p><code>-w</code> 表示安装到工作空间（即根目录）</p></li><li><p><code>--filter(-F)</code> 表示安装到指定子包</p></li><li><p>-r 表示对所有子包执行某个命令</p></li></ul></div><h3 id="只允许pnpm" tabindex="-1">只允许<code>pnpm</code> <a class="header-anchor" href="#只允许pnpm" aria-label="Permalink to &quot;只允许\`pnpm\`&quot;">​</a></h3><p>当在项目中使用 <code>pnpm</code> 时，如果不希望用户使用 <code>yarn</code> 或者 <code>npm</code> 安装依赖，可以将下面的这个 <code>preinstall</code> 脚本添加到工程根目录下的 <code>package.json</code>中</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preinstall</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx only-allow pnpm</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="release工作流" tabindex="-1"><code>Release</code>工作流 <a class="header-anchor" href="#release工作流" aria-label="Permalink to &quot;\`Release\`工作流&quot;">​</a></h3><p><code>pnpm</code> 推荐了两个开源的版本控制工具：</p><ul><li><p><a href="https://github.com/changesets/changesets" target="_blank" rel="noreferrer"><u><code>changesets</code></u></a>：是一个管理 <code>CHANGELOG</code> 的工具，可以帮助我们自动生成 <code>CHANGELOG</code></p></li><li><p><a href="https://rushjs.io/" target="_blank" rel="noreferrer"><u><code>rush</code></u></a>：可以让 <code>JavaScript</code> 开发者更轻松地同时构建、发布多个 <code>NPM</code> 包</p></li></ul><h4 id="配置changesets" tabindex="-1">配置<code>changesets</code> <a class="header-anchor" href="#配置changesets" aria-label="Permalink to &quot;配置\`changesets\`&quot;">​</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装 changesets</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-Dw</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@changesets/cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 初始化 changesets</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">changeset</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>执行完初始化命令后，会在工程的根目录下生成 .changeset 目录，其中的 config.json 作为默认的 changeset 的配置文件</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">$schema</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/@changesets/config@2.3.0/schema.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">changelog</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@changesets/cli/changelog</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">commit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">fixed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">linked</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">restricted</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">baseBranch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">master</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">updateInternalDependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">patch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">ignore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">参数说明</p><ul><li><p><code>changelog</code>: <code>changelog</code> 生成方式</p></li><li><p><code>commit</code>: 不要让 <code>changeset</code> 在 <code>publish</code> 的时候帮我们做 <code>git add</code></p></li><li><p><code>linked</code>: 配置哪些包要共享版本</p></li><li><p><code>access</code>: 公私有安全设定，内网建议 <code>restricted</code> ，开源使用 <code>public</code></p></li><li><p><code>baseBranch</code>: 项目主分支</p></li><li><p><code>updateInternalDependencies</code>: 确保某包依赖的包发生 <code>upgrade</code>，该包也要发生 <code>version upgrade</code> 的衡量单位（量级）</p></li><li><p><code>ignore</code>: 不需要变动 <code>version</code> 的包</p></li><li><p><code>___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH</code>: 在每次 <code>version</code> 变动时一定无理由 <code>patch</code> 抬升依赖他的那些包的版本，防止陷入 <code>major</code> 优先的未更新问题</p></li></ul></div><h4 id="使用-changeset" tabindex="-1">使用 <code>changeset</code> <a class="header-anchor" href="#使用-changeset" aria-label="Permalink to &quot;使用 \`changeset\`&quot;">​</a></h4><p>为了便于统一管理所有包的发布过程，在工程根目录下的 <code>pacakge.json</code> 的 <code>scripts</code> 中增加如下几条脚本</p><ol><li>编译阶段，生成构建产物</li></ol><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pnpm --filter=xxx/* run build</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>清理构建产物和 <code>node_modules</code></li></ol><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">clear</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rimraf &#39;packages/*/{lib,node_modules}&#39; &amp;&amp; rimraf node_modules</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="3"><li>执行 <code>changeset</code>，开始交互式填写变更集，这个命令会将你的包全部列出来，然后选择你要更改发布的包</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">changeset</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li>执行 <code>changeset version</code>，更新版本和 <code>CHANGELOG</code></li></ol><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version-packages</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">changeset version</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">注意</p><p>这里需要注意的是，版本的选择一共有三种类型，分别是 <code>patch</code>、<code>minor</code> 和 <code>major</code>，严格遵循 <a href="https://semver.org/" target="_blank" rel="noreferrer"><u><code>semver</code></u></a> 规范。</p></div><ol start="5"><li>发布到 <code>npm</code></li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">publish</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-r</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">如果不想直接发 <code>release</code> 版本，而是想先发一个带 <code>tag</code> 的 <code>prerelease</code>版本呢(比如<code>beta</code>或者<code>rc</code>版本)？</p><ol><li>修改包的版本号</li></ol><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">package1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.1-beta.1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>然后运行</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">changeset</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">publish</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--tag</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">beta</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意发包的时候不要忘记加上 <code>--tag</code> 参数。</p><ol start="2"><li>通过 <code>changeset</code> 提供的 <a href="https://github.com/changesets/changesets/blob/main/docs/prereleases.md" target="_blank" rel="noreferrer"><u><code>Prereleases</code></u></a> 模式，通过 <code>pre enter &lt;tag&gt;</code> 命令进入先进入 <code>pre</code> 模式。</li></ol><p>常见的<code>tag</code>如下所示：</p><p>系统平台上就是发行候选版本。RC 版不会再加入新的功能了，主要着重于除错</p><table><thead><tr><th>名称</th><th>功能</th></tr></thead><tbody><tr><td><code>alpha</code></td><td>是内部测试版，一般不向外部发布，会有很多 Bug，一般只有测试人员使用</td></tr><tr><td><code>beta</code></td><td>也是测试版，这个阶段的版本会一直加入新的功能。在<code>Alpha</code>版之后推出</td></tr><tr><td><code>rc(Release　Candidate)</code></td><td>统平台上就是发行候选版本。<code>RC</code>版不会再加入新的功能了，主要着重于除错</td></tr></tbody></table><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">changeset</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pre</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">enter</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">beta</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后在此模式下的 <code>changeset publish</code> 均将默认走 <code>beta</code> 环境，下面在此模式下任意的进行你的开发</p><p>完成版本发布之后，退出 Prereleases 模式</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">changeset</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pre</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">exit</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div>`,61)]))}const u=a(e,[["render",o]]);export{y as __pageData,u as default};
