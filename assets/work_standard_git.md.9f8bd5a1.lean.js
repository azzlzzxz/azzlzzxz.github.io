import{_ as t,o as l,c as a,N as s}from"./chunks/framework.2673bc46.js";const y=JSON.parse('{"title":"Git 规范","description":"","frontmatter":{},"headers":[],"relativePath":"work/standard/git.md","lastUpdated":1727788971000}'),o={name:"work/standard/git.md"};function n(c,e,d,i,r,p){return l(),a("div",null,e[0]||(e[0]=[s('<h1 id="git-规范" tabindex="-1">Git 规范 <a class="header-anchor" href="#git-规范" aria-label="Permalink to &quot;Git 规范&quot;">​</a></h1><blockquote><p>使用 Git Flow 工作流进行分支管理</p></blockquote><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git-flow.png" alt="git-flow"></p><ul><li><p><code>master</code> 主分支</p><ul><li>用于存放对外发布的稳定版本（不能直接在该分支上开发，只能从 <code>develop</code> 分支合并过来）</li></ul></li><li><p><code>develop</code> 开发分支</p><ul><li>用于存放最新的开发版本（所有新功能都以该分支来创建自己的开发分支，该分支只做合并操作，不能直接在该分支上开发）</li></ul></li><li><p><code>feature</code> 功能分支</p><ul><li>用于开发新功能（在 <code>develop</code> 上创建分支，以自己开发功能模块命名，功能测试正常后合并到 <code>develop</code> 分支）</li><li><code>feature</code> 分支推荐命名规范：<code>feature</code>/日期-开发者-功能模块</li></ul></li><li><p><code>release</code> 预发布分支</p><ul><li>用于当需要为发布新版做准备时（在 <code>develop</code> 上创建分支，以版本号命名，测试完成后合并到 master 和 develop）</li><li><code>release</code> 分支推荐命名规范：<code>release</code>/版本号</li></ul></li></ul><h2 id="commit-提交规范" tabindex="-1"><code>commit</code> 提交规范 <a class="header-anchor" href="#commit-提交规范" aria-label="Permalink to &quot;`commit` 提交规范&quot;">​</a></h2><blockquote><p><code>git commit message</code> 的格式</p></blockquote><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">type</span><span style="color:#89DDFF;">&gt;(&lt;</span><span style="color:#C3E88D;">scope</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">subject</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">body</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">footer</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>type</code>（必填）：<code>commit</code> 的类型</li><li><code>scope</code>（选填）：<code>commit</code> 的影响范围</li><li><code>subject</code>（必填）：<code>commit</code> 信息的简短描述（50 字以内）</li><li><code>body</code>（选填）：<code>commit</code> 信息的具体描述</li><li><code>footer</code>（选填）：重大变化（<code>Breaking Change</code>）和需要关闭的<code>Issue</code></li></ul><h3 id="commit-常用的-type" tabindex="-1"><code>commit</code> 常用的 <code>type</code> <a class="header-anchor" href="#commit-常用的-type" aria-label="Permalink to &quot;`commit` 常用的 `type`&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">type</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:center;"><em>feat</em></td><td style="text-align:left;">新功能</td></tr><tr><td style="text-align:center;"><em>fix</em></td><td style="text-align:left;">修复 bug</td></tr><tr><td style="text-align:center;"><em>docs</em></td><td style="text-align:left;">文档类改动</td></tr><tr><td style="text-align:center;"><em>style</em></td><td style="text-align:left;">代码格式改动，同理适用于业务样式调整</td></tr><tr><td style="text-align:center;"><em>refactor</em></td><td style="text-align:left;">重构（即不是新增功能，也不是修复 bug）</td></tr><tr><td style="text-align:center;"><em>perf</em></td><td style="text-align:left;">性能优化相关</td></tr><tr><td style="text-align:center;"><em>types</em></td><td style="text-align:left;"><code>TypeScript</code> 类型相关的改动</td></tr><tr><td style="text-align:center;"><em>test</em></td><td style="text-align:left;">单元测试、e2e 测试</td></tr><tr><td style="text-align:center;"><em>build</em></td><td style="text-align:left;">构建工具或者依赖项的改动</td></tr><tr><td style="text-align:center;"><em>ci</em></td><td style="text-align:left;">修改项目持续集成流程</td></tr><tr><td style="text-align:center;"><em>chore</em></td><td style="text-align:left;">其他类型的提交</td></tr><tr><td style="text-align:center;"><em>revert</em></td><td style="text-align:left;">恢复或还原相关提交</td></tr></tbody></table><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commits | GitHub</a></li></ul>',12)]))}const g=t(o,[["render",n]]);export{y as __pageData,g as default};
