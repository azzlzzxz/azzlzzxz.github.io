import{_ as n,o as a,c as l,N as e}from"./chunks/framework.ca422207.js";const D=JSON.parse('{"title":"ESLint 插件开发","description":"","frontmatter":{},"headers":[],"relativePath":"capital/plugins/eslint.md","lastUpdated":1725957029000}'),o={name:"capital/plugins/eslint.md"};function p(c,s,t,r,i,y){return a(),l("div",null,s[0]||(s[0]=[e(`<h1 id="eslint-插件开发" tabindex="-1">ESLint 插件开发 <a class="header-anchor" href="#eslint-插件开发" aria-label="Permalink to &quot;ESLint 插件开发&quot;">​</a></h1><p><code>ESLint</code> 插件是给 <code>ESLint</code> 添加额外的规则和插件选项的扩展。插件让你可以自定义 <code>ESLint</code> 配置来强制执行不包括在 <code>ESLint</code> 核心包中的规则。插件也可以提供额外的环境、自定义处理器和配置。</p><h2 id="插件命名" tabindex="-1">插件命名 <a class="header-anchor" href="#插件命名" aria-label="Permalink to &quot;插件命名&quot;">​</a></h2><p>每个插件都是以 <code>eslint-plugin-&lt;plugin-name&gt;</code> 为名的 <code>npm</code> 模块，例如 <code>eslint-plugin-jquery</code>。</p><p>你也可以使用 <code>@&lt;scope&gt;/eslint-plugin-&lt;plugin-name&gt;</code> 格式的范围包，如 <code>@jquery/eslint-plugin-jquery</code>以及 <code>@&lt;scope&gt;/eslint-plugin</code>，如 <code>@jquery/eslint-plugin</code>。</p><h2 id="创建插件" tabindex="-1">创建插件 <a class="header-anchor" href="#创建插件" aria-label="Permalink to &quot;创建插件&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><a href="https://zh-hans.eslint.org/docs/latest/extend/plugins" target="_blank" rel="noreferrer">ESLint 创建插件文档</a></li><li><a href="https://www.npmjs.com/package/generator-eslint" target="_blank" rel="noreferrer">Yeoman 生成器</a> - 官方推荐使用的创建器</li></ul></div><h3 id="安装脚手架依赖" tabindex="-1">安装脚手架依赖 <a class="header-anchor" href="#安装脚手架依赖" aria-label="Permalink to &quot;安装脚手架依赖&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">yo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">generator-eslint</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="使用脚手架创建plugin和rule" tabindex="-1">使用脚手架创建<code>Plugin</code>和<code>Rule</code> <a class="header-anchor" href="#使用脚手架创建plugin和rule" aria-label="Permalink to &quot;使用脚手架创建\`Plugin\`和\`Rule\`&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">eslint:plugin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">yo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">eslint:rule</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="文件目录介绍" tabindex="-1">文件目录介绍 <a class="header-anchor" href="#文件目录介绍" aria-label="Permalink to &quot;文件目录介绍&quot;">​</a></h3><ul><li><code>lib/rules</code> 文件夹下写规则（这里编写我们自定义的<code>eslint</code>的规则）</li><li><code>lib/index.js</code> 规则导出及配置项</li><li><code>tests/lib/rules</code> 文件夹下写测试</li></ul><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/eslint.jpg" alt="eslint"></p><h2 id="编写插件规则" tabindex="-1">编写插件规则 <a class="header-anchor" href="#编写插件规则" aria-label="Permalink to &quot;编写插件规则&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://zh-hans.eslint.org/docs/latest/extend/custom-rules" target="_blank" rel="noreferrer">ESLint 自定义规则文档</a></p></div><p>自定义规则的基础格式：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">suggestion</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">docs</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Description of the rule</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">fixable</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">schema</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 回调函数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="meta包含规则的元数据" tabindex="-1"><code>meta</code>包含规则的元数据 <a class="header-anchor" href="#meta包含规则的元数据" aria-label="Permalink to &quot;\`meta\`包含规则的元数据&quot;">​</a></h3><ul><li><p><code>type</code>：表示规则的类型，是 <code>&quot;problem&quot;</code>、<code>&quot;suggestion&quot;</code> 或 <code>&quot;layout&quot;</code> 其中之一。</p><ul><li><code>&quot;problem&quot;</code> 该规则正在识别将导致错误或可能导致混乱行为的代码。</li><li><code>&quot;suggestion&quot;</code> 表示规则是一个建议。</li><li><code>&quot;layout&quot;</code> 该规则主要关心的是空白、分号、逗号和括号，所有决定代码外观的部分，而不是代码的执行方式。这些规则对代码中没有在 <code>AST</code> 中指定的部分起作用。</li></ul></li><li><p><code>docs</code>：用于提供规则的文档信息</p><ul><li><code>description</code>：规则的简要描述。</li><li><code>recommended</code>：表示在<a href="https://zh-hans.eslint.org/docs/latest/use/configure/configuration-files#%E6%89%A9%E5%B1%95%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" target="_blank" rel="noreferrer">配置文件</a> 中是否使用 <code>&quot;extends&quot;</code>: <code>&quot;eslint:recommended&quot;</code> 属性启用该规则。</li><li><code>url</code>：规则的详细文档 <code>URL</code></li></ul></li></ul><blockquote><p>在自定义规则或插件中，你可以省略 <code>docs</code> 或在其中包含你需要的任何属性。</p></blockquote><ul><li><code>fixable</code>：一个字符串或布尔值，表示规则是否可自动修复。如果为字符串 <code>&quot;code&quot;</code>，表示规则可以自动修复代码。如果为布尔值 <code>true</code>，表示规则可以自动修复，但修复可能会有副作用。如果为布尔值 <code>false</code>，表示规则不可自动修复</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>fixable</code> 属性对于可修复规则是强制性的。如果没有指定这个属性，<code>ESLint</code> 将在规则试图产生一个修复时抛出一个错误。如果规则不是可修复的，则省略 <code>fixable</code> 属性。</p></div><ul><li><code>hasSuggestions</code>：指定规则是否可以返回建议（如果省略，默认为 <code>false</code>）。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>hasSuggestions</code> 属性对于提供建议的规则来说是强制性的。如果这个属性没有设置为 <code>true</code>，<code>ESLint</code> 将在规则试图产生建议时抛出一个错误。如果规则不提供建议，省略 <code>hasSuggestions</code> 属性。</p></div><ul><li><code>schema</code>：用于定义规则的配置选项。它可以是一个数组，每个数组项定义一个配置选项。每个配置选项包含以下字段： <ul><li><code>enum</code>：一个数组，表示配置选项的可选值。</li><li><code>type</code>：配置选项的类型，可以是 <code>&quot;string&quot;</code>、<code>&quot;number&quot;</code>、<code>&quot;boolean&quot;</code>、<code>&quot;array&quot;</code>、<code>&quot;object&quot;</code> 等。</li><li><code>default</code>：配置选项的默认值。</li></ul></li></ul><blockquote><p><a href="https://zh-hans.eslint.org/docs/latest/extend/custom-rules#%E9%80%89%E9%A1%B9%E6%A8%A1%E5%BC%8F" target="_blank" rel="noreferrer">schema 完整配置</a></p></blockquote><ul><li><p><code>deprecated</code>：表示该规则是否已经被废弃。如果规则没有被废除，你可以省略 <code>deprecated</code> 属性。</p></li><li><p><code>replacedBy</code>：如果是被废弃的规则，指定替代规则。</p></li></ul><h3 id="create" tabindex="-1"><code>create</code> <a class="header-anchor" href="#create" aria-label="Permalink to &quot;\`create\`&quot;">​</a></h3><p><code>create</code>返回一个对象，该对象具有 <code>ESLint</code> 调用的方法，在遍历 <code>JavaScript</code> 代码的抽象语法树（由 <code>ESTree</code> 定义的 <code>AST</code>）时 <code>visit</code> 节点。</p><h4 id="context上下文对象" tabindex="-1"><code>context</code>上下文对象 <a class="header-anchor" href="#context上下文对象" aria-label="Permalink to &quot;\`context\`上下文对象&quot;">​</a></h4><blockquote><p><a href="https://zh-hans.eslint.org/docs/latest/extend/custom-rules#%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AF%B9%E8%B1%A1" target="_blank" rel="noreferrer"><code>context</code>上下文对象完整配置</a></p></blockquote><p>这里是一些常用的属性：</p><ul><li><code>context.sourceCode</code>：<code>SourceCode</code> 对象，可以用它来处理传递给 <code>ESLint</code> 的源代码。</li></ul><blockquote><p><a href="https://zh-hans.eslint.org/docs/latest/extend/custom-rules#%E8%AE%BF%E9%97%AE%E6%BA%90%E4%BB%A3%E7%A0%81" target="_blank" rel="noreferrer">sourceCode 完整配置</a></p></blockquote><ul><li><code>context.options</code>：此规则<a href="https://zh-hans.eslint.org/docs/latest/use/configure/rules" target="_blank" rel="noreferrer">配置选项</a>的数组。</li><li><code>context.getSourceCode()</code>：返回一个 <code>SourceCode</code> 对象，该对象包含有关源代码的信息，如原始代码、行和列等。</li><li><code>context.report()</code>：用于在代码中生成错误或警告。 <ul><li><code>message</code>：问题信息。</li><li><code>node</code>：（可选的 <code>object</code>）与问题有关的 <code>AST</code> 节点。如果存在并且没有指定 <code>loc</code>，那么该节点的起始位置将作为问题的位置。</li><li><code>loc</code>：（可选的 <code>object</code>）一个指定问题位置的对象。如果同时指定了 <code>loc</code> 和 <code>node</code>，那么将使用 <code>loc</code> 而不是 <code>node</code> 的位置。</li><li><code>fix(fixer)</code>：（可选的 <code>function</code>）一个应用修复的函数，以解决这个问题。</li></ul></li></ul><blockquote><p><a href="https://zh-hans.eslint.org/docs/latest/extend/custom-rules#%E6%8A%A5%E5%91%8A%E9%97%AE%E9%A2%98" target="_blank" rel="noreferrer">report 完整配置</a></p></blockquote><h2 id="单元测试" tabindex="-1">单元测试 <a class="header-anchor" href="#单元测试" aria-label="Permalink to &quot;单元测试&quot;">​</a></h2><p><code>ESLint</code> 提供了 <code>RuleTester</code> 实用工具，以方便为规则编写测试。</p><blockquote><p><a href="https://zh-hans.eslint.org/docs/latest/integrate/nodejs-api#ruletester" target="_blank" rel="noreferrer">RuleTester 完整配置</a></p></blockquote><p><code>ruleTester.run</code> 是 <code>eslint-plugin-rules</code> 包中提供的一个方法，用于对 <code>ESLint</code> 规则进行单元测试。它是对 <code>ESLint</code> 内置的 <code>RuleTester</code> 类的封装，并提供了更简洁的语法和更方便的断言方式。</p><p><code>RuleTester</code> 类是 <code>ESLint</code> 提供的一个辅助工具，用于编写和运行规则的单元测试。它提供了一组方法来模拟代码的解析和检测过程，并验证规则是否正确地应用于代码。 <code>ruleTester.run</code> 方法是 <code>RuleTester</code> 类的一个实例方法，用于运行规则的单元测试。它接受三个参数：</p><ul><li><code>ruleName</code>：规则的名称，用于标识测试结果。</li><li><code>rule</code>：要测试的规则对象。</li><li><code>tests</code>：一个包含 <code>valid</code> 和 <code>invalid</code> 属性的对象，用于指定测试用例。</li></ul><p>在运行 <code>ruleTester.run</code> 方法时，它会自动运行规则并比较实际的错误结果与预期的错误结果。如果实际结果与预期结果不匹配，测试将失败并显示错误信息。 <code>ruleTester.run</code> 方法的封装简化了编写规则测试的过程，提供了更直观和简洁的语法，使得编写和运行规则测试变得更加方便和易于理解。</p><h2 id="写一个eslint规则" tabindex="-1">写一个<code>ESLint</code>规则 <a class="header-anchor" href="#写一个eslint规则" aria-label="Permalink to &quot;写一个\`ESLint\`规则&quot;">​</a></h2><p>我们<code>react</code>在日常开发中，写<code>className</code>时有可能会在前后或类名与属性之间多出空格影响代码美观，我们可以通过编写<code>ESLint</code>规则来修复这个问题。</p><h3 id="找到你想要约束的代码的ast节点" tabindex="-1">找到你想要约束的代码的<code>AST</code>节点 <a class="header-anchor" href="#找到你想要约束的代码的ast节点" aria-label="Permalink to &quot;找到你想要约束的代码的\`AST\`节点&quot;">​</a></h3><blockquote><p>AST 在线预览 <a href="https://astexplorer.net/" target="_blank" rel="noreferrer">AST explorer</a></p></blockquote><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/eslint_ast.jpg" alt="eslint_ast"></p><h3 id="编写规则" tabindex="-1">编写规则 <a class="header-anchor" href="#编写规则" aria-label="Permalink to &quot;编写规则&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">suggestion</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">docs</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">解决 className 中间有多余的空格</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">fixable</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">messages</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">space</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">className 中间有多余的空格</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">schema</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">enum</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">always</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">never</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 在这个规则中，主要处理 JSXAttribute 节点，它表示 JSX 中的属性</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">JSXAttribute</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">node</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 这一行判断当前处理的 JSX 属性是否是 className，如果不是，则直接跳过</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 获取 className 属性的值节点</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">classNameValueNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 获取属性值对应的源码文本</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">text</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSourceCode</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">classNameValueNode</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">text</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 提取实际的属性值</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">textValue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">classNameValueNode</span><span style="color:#89DDFF;">?.</span><span style="color:#BABED8;">value</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 获取属性值的源码范围，用 start 和 end 分别表示属性值在源码中的起始位置和结束位置</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">start</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">end</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">classNameValueNode</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">range</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果 className 属性的值是一个 JSX 表达式容器，那么执行以下操作</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">node</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">JSXExpressionContainer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// 调整 start 和 end，以排除 JSX 表达式容器的 {} 符号，只取实际表达式内容的范围</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// 从源码文本中提取出实际的表达式内容</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">textValue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">start</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">end</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// 恢复为完整的表达式内容范围</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 正则表达式用于匹配 className 属性值中多余的空</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">reg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/((?&lt;=</span><span style="color:#C3E88D;">\\S</span><span style="color:#89DDFF;">)([</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">]{2,})(?=</span><span style="color:#C3E88D;">\\S</span><span style="color:#89DDFF;">))|((?&lt;=[</span><span style="color:#C3E88D;">\\w</span><span style="color:#BABED8;">\\]\\}</span><span style="color:#89DDFF;">])(</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">{2,})(?=</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">))/</span><span style="color:#F78C6C;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果 className 的属性值中有符合正则的多余空格，或者在值的开头或结尾存在多余的空格</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">textValue</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">+|</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">textValue</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// 去掉开头和结尾的空格，并将符合正则的多余空格替换为单个空格。生成新的文本 newText</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">newText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">textValue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">reg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#BABED8;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">report</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 指定问题节点</span></span>
<span class="line"><span style="color:#F07178;">            node</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">classNameValueNode</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 错误/警告提示信息</span></span>
<span class="line"><span style="color:#F07178;">            messageId</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">space</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 修复</span></span>
<span class="line"><span style="color:#F07178;">            fix</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">fixer</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">fixer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceTextRange</span><span style="color:#F07178;">([</span><span style="color:#BABED8;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">newText</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="发布、引用" tabindex="-1">发布、引用 <a class="header-anchor" href="#发布、引用" aria-label="Permalink to &quot;发布、引用&quot;">​</a></h2><p>把插件发布到 npm 上，然后就可以在项目中引用了。</p><p>在<code>.eslintrc.js</code> 文件中配置插件：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/eslint_use.jpg" alt="eslint_use"></p>`,55)]))}const d=n(o,[["render",p]]);export{D as __pageData,d as default};
