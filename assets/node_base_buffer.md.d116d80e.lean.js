import{_ as n,o as a,c as l,N as p}from"./chunks/framework.2f525601.js";const B=JSON.parse('{"title":"Buffer","description":"","frontmatter":{},"headers":[],"relativePath":"node/base/buffer.md","lastUpdated":1729414590000}'),o={name:"node/base/buffer.md"};function e(r,s,c,t,y,D){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="buffer" tabindex="-1">Buffer <a class="header-anchor" href="#buffer" aria-label="Permalink to &quot;Buffer&quot;">​</a></h1><h2 id="前端自己的二进制变量-arraybuffer" tabindex="-1">前端自己的二进制变量 <code>arrayBuffer</code> <a class="header-anchor" href="#前端自己的二进制变量-arraybuffer" aria-label="Permalink to &quot;前端自己的二进制变量 \`arrayBuffer\`&quot;">​</a></h2><p><code>arrayBuffer</code> 可以来操作二进制。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建一个空间，就的申请这个空间的大小</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建了一个ArrayBuffer，它有4位（4单位：字节）</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arrayBuffer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ArrayBuffer</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(arrayBuffer)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/array_buffer.png" alt="array_buffer"></p><ol><li>开头字母 I 和 U 的区别：有无符号位，U 代表无符号位，I 代表有符号位。</li><li>Int8、Int16、Int32 的区别：分别代表单字节、双字节、四字节。</li></ol><p>拿到的 <code>arrayBuffer</code> 是不能读取和操作的，只是声明，想操作它，据需要创建一个视图去读取 <code>arrayBuffer</code> 里的数据。</p><p><strong><code>Uint8Array</code>、<code>Uint16Array</code>、<code>Uint32Array</code> 展现方式是不同的，但是结果是一样的。</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arrayBuffer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ArrayBuffer</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 数组里有4个，每个能放8个位，Uint8Array的8代表8位</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Uint8Array</span><span style="color:#BABED8;">(arrayBuffer) </span><span style="color:#676E95;font-style:italic;">// 4 * 8的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">x[</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#BABED8;">x[</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">255</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 如果大于255，例如：256就显示0（每255循环），257就是1</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(x) </span><span style="color:#676E95;font-style:italic;">// [1, 255, 0, 0]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ===&gt;二进制是从有往左 0 ，0，11111111，00000001</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> x2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Uint16Array</span><span style="color:#BABED8;">(arrayBuffer) </span><span style="color:#676E95;font-style:italic;">// 16 * 2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 0 ，1111111100000001（两个组成一个）</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(x2) </span><span style="color:#676E95;font-style:italic;">// [65281, 0]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> x3 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Uint32Array</span><span style="color:#BABED8;">(arrayBuffer) </span><span style="color:#676E95;font-style:italic;">// 32 * 1</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(x3) </span><span style="color:#676E95;font-style:italic;">// [65281] （四个组成一个）</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/buffer.png" alt="buffer"></p><h2 id="node-中的-buffer" tabindex="-1"><code>node</code> 中的 <code>Buffer</code> <a class="header-anchor" href="#node-中的-buffer" aria-label="Permalink to &quot;\`node\` 中的 \`Buffer\`&quot;">​</a></h2><p><code>node</code> 中的 <code>buffer</code> 表示用的是 2 进制，但是展现的方式是 16 进制（2 进制太长了）。</p><p>16 进制 0xff = 2 进制 11111111 = 10 进制 255（不同进制可以表示同一个数）。</p><p><code>JS</code> 中有进制转换方法不需要自己转换：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 任意进制转10进制</span></span>
<span class="line"><span style="color:#82AAFF;">parseInt</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">11111111</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// 255</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 任意进制转任意进制</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">((</span><span style="color:#F78C6C;">255.0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">16</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// ff</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 为什么用255.0.toString()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// js可以识别浮点类型如果写255.toString()，会把toString识别错误所以是255.0.toString()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>经典面试题：</strong></p><p>0.1 + 0.2 !== 0.3</p><p>计算机里存的不是 0.1，是二进制，要把 0.1，0.2 转成二进制。</p><p>将小数转化成二进制：乘 2 取整</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">0.1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">0.2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0.4</span><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">0.4</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0.8</span><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">0.8</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.6</span><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">==&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0.6</span></span>
<span class="line"><span style="color:#F78C6C;">0.6</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.2</span><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">==&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0.2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">无限循环下去</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">不能用有限的内存记录无限的数，所以会进1，所以0.1在存进电脑里就会大一些。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="base64-是如何转换出来的" tabindex="-1"><code>base64</code> 是如何转换出来的 <a class="header-anchor" href="#base64-是如何转换出来的" aria-label="Permalink to &quot;\`base64\` 是如何转换出来的&quot;">​</a></h2><p><code>base64</code> 可以用来数据传递、替代 <code>url</code>。（就像数据传递时不能传中文，就需要转成 <code>base64</code> 进行传递）</p><p><code>node</code> 不支持 <code>gbk</code>，只支持 <code>utf8</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">珠</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(r) </span><span style="color:#676E95;font-style:italic;">//  e7 8f a0 (16进制，3 * 8) buffer里放的是2进制，展示16进制</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0xe7</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0x8f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0xa0</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">---&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">11100111</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10001111</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10100000</span><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 那怎么转成base64呢？就是把 3字节 * 8位 拆成 4字节 * 6位（补0变成8位）</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>所以 base64 有个缺陷就是转化结果比以前大 1/3（所以 base64，不要用来转换大文件）</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">---&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">111001</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">111000</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">111110</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100000</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;"> （字节最大是6个1，也就是63，不可能大于64，所以叫base64）</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">parseInt</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">111001</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 57</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">parseInt</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">111000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">))</span><span style="color:#676E95;font-style:italic;">// 56</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">parseInt</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">111110</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 62</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">parseInt</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">100000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 32</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">base64需要取特定的地方去取值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">str</span><span style="color:#89DDFF;">+=</span><span style="color:#BABED8;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLowerCase</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">str</span><span style="color:#89DDFF;">+=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0123456789+/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str[</span><span style="color:#F78C6C;">57</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> str[</span><span style="color:#F78C6C;">56</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> str[</span><span style="color:#F78C6C;">62</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> str[</span><span style="color:#F78C6C;">32</span><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 54+g(这个就是 珠 --&gt; base64编码)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 用法</span></span>
<span class="line"><span style="color:#BABED8;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">珠</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">base64</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// 54+g</span></span>
<span class="line"><span style="color:#BABED8;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// &lt;Buffer 61&gt; 不够补0，缺少四位用=号去拼</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="buffer-基本用法" tabindex="-1"><code>Buffer</code> 基本用法 <a class="header-anchor" href="#buffer-基本用法" aria-label="Permalink to &quot;\`Buffer\` 基本用法&quot;">​</a></h2><p><code>buffer</code> 用来表示当前内存的信息，因为内存里放的都是二进制，所以用 <code>buffer</code> 来表现。</p><h3 id="buffer-声明方式" tabindex="-1"><code>Buffer</code> 声明方式 <a class="header-anchor" href="#buffer-声明方式" aria-label="Permalink to &quot;\`Buffer\` 声明方式&quot;">​</a></h3><p>固定大小、声明出来不能随意改变。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// 6：字节数 （默认后端声明的大小数量，都是字节数）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建buffer</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">明年加油</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">0x01</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0x64</span><span style="color:#BABED8;">])</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="buffer-的长度" tabindex="-1"><code>buffer</code> 的长度 <a class="header-anchor" href="#buffer-的长度" aria-label="Permalink to &quot;\`buffer\` 的长度&quot;">​</a></h3><p><code>buffer</code> 的长度是字节数目的长度</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Buffer</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">时</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(buffer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length) </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="更改-buffer" tabindex="-1">更改 <code>buffer</code> <a class="header-anchor" href="#更改-buffer" aria-label="Permalink to &quot;更改 \`buffer\`&quot;">​</a></h3><p>想更改 <code>buffer</code>，可以通过索引，但是想更改 <code>buffer</code> 的大小，是无法更改的，可以通过声明一个新空间将结果拷贝进去。</p><p><code>buffer</code> 提供了两个方法：<code>copy</code>、<code>concat</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">12</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">明年</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> buffer2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">加油</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="copy" tabindex="-1"><code>copy</code> <a class="header-anchor" href="#copy" aria-label="Permalink to &quot;\`copy\`&quot;">​</a></h4><p>对应的参数（要复制到的 <code>buffer</code>，<code>buffer</code> 内开始写入的位置，<code>buffer1</code> 的开始复制位置，<code>buffer1</code> 停止复制位置）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">buffer1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy</span><span style="color:#BABED8;">(buffer</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">buffer2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy</span><span style="color:#BABED8;">(buffer</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">target</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">targetStart</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">sourceStart</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">sourceEnd</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">sourceStart</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">sourceEnd</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">target</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">targetStart</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">i</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="concat" tabindex="-1"><code>concat</code> <a class="header-anchor" href="#concat" aria-label="Permalink to &quot;\`concat\`&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> newBuffer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#BABED8;">([buffer1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> buffer2]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 100这个参数是指定新buffer的长度，如果不传，默认取数组内buffer长度的总和</span></span>
<span class="line"><span style="color:#FFCB6B;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">bufferList</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">length</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> bufferList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">buf</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">alloc</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">length</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">offset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">bufferList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">bufItem</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">bufItem</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">buf</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">offset</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">offset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">bufItem</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">offset</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="isbuffer-判断是否是-buffer" tabindex="-1"><code>isBuffer</code> 判断是否是 <code>buffer</code> <a class="header-anchor" href="#isbuffer-判断是否是-buffer" aria-label="Permalink to &quot;\`isBuffer\` 判断是否是 \`buffer\`&quot;">​</a></h3>`,45)]))}const i=n(o,[["render",e]]);export{B as __pageData,i as default};
