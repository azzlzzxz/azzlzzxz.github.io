import{_ as n,B as c,o as i,c as s,x as e,D as a,z as t,a as o,Q as l}from"./chunks/framework.a5035e6c.js";const p="/assets/electron.1903aecb.png",d="/assets/electron_detail.416b0c0a.png",h="/assets/process.ceb11bc3.png",_="/assets/electron_api.732b8de2.png",x=JSON.parse('{"title":"Electron","description":"","frontmatter":{},"headers":[],"relativePath":"frame/electron/introduce.md","lastUpdated":1698637268000}'),m={name:"frame/electron/introduce.md"},u=l("",18),b=l("",14);function E(f,P,I,q,T,w){const r=c("font");return i(),s("div",null,[u,e("p",null,[e("strong",null,[a(r,{color:"FF9D00"},{default:t(()=>[o("一个 Electron 只会存在一个主进程，但它可以存在多个渲染进程，")]),_:1})]),o(" 由于 Electron 使用了 Chromium 来展示 UI 界面 (应用程序中被称为 BrowserWindow)，自然而然地，Chromium 的多进程架构也被引入。")]),e("p",null,[e("strong",null,[a(r,{color:"FF9D00"},{default:t(()=>[o("当主进程每创建一个独立的 BrowserWindow 实例，Electron 都会初始化一个独立的渲染进程，隔离了不同窗口之间的环境，")]),_:1})]),o(" 每一个渲染进程，只需要关心自己内部的 Web 页面。")]),b])}const S=n(m,[["render",E]]);export{x as __pageData,S as default};
