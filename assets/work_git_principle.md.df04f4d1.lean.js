import{_ as n,o as a,c as l,N as e}from"./chunks/framework.0450e108.js";const b=JSON.parse('{"title":"Git 浅析","description":"","frontmatter":{},"headers":[],"relativePath":"work/git/principle.md","lastUpdated":1727029529000}'),p={name:"work/git/principle.md"};function o(c,s,t,i,r,y){return a(),l("div",null,s[0]||(s[0]=[e(`<h1 id="git-浅析" tabindex="-1">Git 浅析 <a class="header-anchor" href="#git-浅析" aria-label="Permalink to &quot;Git 浅析&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-Git-%E5%AF%B9%E8%B1%A1" target="_blank" rel="noreferrer">git 原理</a></p></div><p><code>git</code> 版本库的内容都是存储在<code>.git</code> 这个隐藏目录中，一般默认是被隐藏的，如果想要显示，那么需要在 <code>exclude</code> 中把<code>\\*\\*/.git</code> 这个配置删除，这样就可以看到啦，展开<code>.git</code> 目录文件如下所示：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/catalogue.png" alt="catalogue"></p><p><code>.git</code> 目录下有很多文件</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">config</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 仓库的配置文件</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">description</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 仓库的描述信息</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">HEAD</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 指向当前分支</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">hooks</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 存放一些shell脚本，可以设置特定的git命令后触发相应的脚本</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">index</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 二进制暂存区（stage）</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">info</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 仓库的其他信息</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">│</span><span style="color:#BABED8;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">exclude</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 本地的排除文件规则，功能和.gitignore类似</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 保存所有更新操作的引用记录，主要用于git reflog等</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">objects</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 所有文件的存储对象</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">refs</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 具体的引用，主要存储分支和标签的引用</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="git-是怎么存储信息的" tabindex="-1"><code>git</code> 是怎么存储信息的 <a class="header-anchor" href="#git-是怎么存储信息的" aria-label="Permalink to &quot;\`git\` 是怎么存储信息的&quot;">​</a></h2><p>关于 <code>git</code> 是怎么存储信息的，我们先简单的看一个例子直观感受一下</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># git版本库初始化</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建两个文件</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">111</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">a.txt</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">222</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">b.txt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 提交到暂存区</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;">*</span><span style="color:#C3E88D;">.txt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看在git版本库里存的内容</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">58</span><span style="color:#C3E88D;">c9</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># blob</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">58</span><span style="color:#C3E88D;">c9</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 111</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">c200</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># blob</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">c200</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 222</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>简单的以下面几个图形来表示 <code>git</code> 的几个 <code>object</code>：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_obj.png" alt="git_obj"></p><p>此时的版本库包含两个 <code>blob</code> 对象，分别存储 <code>a.txt</code>，<code>b.txt</code>的内容。</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_blob.png" alt="git_blob"></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建一个commit</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-am</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">init commit</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 发现版本库里又多两个object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看一下这两个内容是啥</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">caa</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># tree</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">caa</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 100644 blob 58c9bdf9d017fcd178dc8c073cbfcbb7ff240d6c    a.txt</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 100644 blob c200906efd24ec5e783bee7f23b5d7c941b0c12c    b.txt</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">277</span><span style="color:#C3E88D;">f</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># commit</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">277</span><span style="color:#C3E88D;">f</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># tree 4caaa1a9ae0b274fba9e3675f9ef071616e5b209</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># author mx &lt;zhongmeixiu@fenxianglife.com&gt; 1686290529 +0800</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># committer mx &lt;zhongmeixiu@fenxianglife.com&gt; 1686290529 +0800</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># init commit</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>当执行完 <code>commit</code> 之后，<code>git</code> 版本库里又多出了两个 <code>object</code>，我们使用 <code>git cat-file</code> 查看之后，发现它们的类型分别是 <code>tree object</code> 和 <code>commit object</code>，首先我们看 <code>tree</code> 这种 <code>object</code> 类型，从打印的内容我们可以看出，它存储的是 <code>a.txt</code> 和 <code>b.txt</code> 这两个 <code>blob</code> 的内容，即一个目录结构（相当于一个文件夹），以及文件模式，<code>object</code> 类型，通过 <code>SHA-1</code> 算法计算出的二进制哈希值 ，文件名等。 此时的版本库如下所示，这个待提交的 <code>tree</code> 对象包含 <code>a.txt</code> 和 <code>b.txt</code> 这两个 <code>blob</code>：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_txt.png" alt="git_txt"></p><p>接下来我们再来看 <code>commit</code> 这种 <code>object</code> 类型，它存储的是一个提交信息，包括：</p><ul><li>对应目录结构的快照 <code>tree</code> 对象的哈希值</li><li>上一个提交的哈希值（由于这里是第一个提交，所以没有父节点）</li><li>提交者信息（依据你的 <code>user.name</code> 和 <code>user.email</code> 配置来设定，外加一个时间戳）</li><li>留空一行，最后是提交的信息；</li></ul><p>此时我们看 <code>git</code> 仓库是这样的，<code>commit</code> 对象指向暂存区待提交的 <code>tree</code> 对象的快照：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_tree.png" alt="git_tree"></p><p>以上就是关于 <code>git</code> 怎么存储一个提交信息的过程了，不过这里没有涉及到关于分支的存储，接下来简单看一下在 <code>git</code> 版本库中分支是怎么存储的</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看我们的提交在哪个分支</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git/HEAD</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看分支所指向提交的哈希值</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git/refs/heads/master</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 277fabc07e7f87e4006640d80d6d89308550ccc7</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在 <code>git</code> 版本库中，<code>HEAD</code>，分支，<code>tag</code> 可以简单理解成一个指针，指向所提交的哈希值，如下所示：我们的提交在 <code>master</code> 分支，且 <code>master</code> 分支指向的是这次提交所对应的哈希值。</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_head.png" alt="git_head"></p><h2 id="git-add-底层执行原理" tabindex="-1"><code>git add</code> 底层执行原理 <a class="header-anchor" href="#git-add-底层执行原理" aria-label="Permalink to &quot;\`git add\` 底层执行原理&quot;">​</a></h2><p>在进行 <code>git add</code> 底层执行原理之前，我们先了解几个 <code>git</code> 相关的底层命令</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建 blob 对象</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">hash-object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 更新暂存区</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">update-index</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 暂存区写入版本库</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">write-tree</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 提交tree对象</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commit-tree</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看对象类型</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看对象内容</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>初始化一个 <code>git</code> 版本库</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 初始化git版本库</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看.git/objects下有两个空的info和pack子目录</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">find</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git/objects</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .git/objects</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .git/objects/pack</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .git/objects/info</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_add.png" alt="git_add"></p><p>可以看到，初始化 <code>git</code> 版本库之后，<code>git</code> 对 <code>objects</code> 目录进行了初始化，创建了两个空的 <code>info</code> 和 <code>pack</code> 子目录。</p><p>接下来，创建两个文件 <code>a.txt</code> 和 <code>b.txt</code>，使用<code>git hash-object</code>分别创建 <code>git</code> 对象并进行存储，拿到这些文件的键，<code>git hash-object</code>命令可以将任意数据保存于<code>.git/objects</code> 目录下，并返回指向该数据对象的唯一的键。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">111</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">a.txt</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">hash-object</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-w</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--stdin</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 58c9bdf9d017fcd178dc8c073cbfcbb7ff240d6c  （blob object）</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">222</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">b.txt</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">hash-object</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-w</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--stdin</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># c200906efd24ec5e783bee7f23b5d7c941b0c12c  （blob object）</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>git hash-object</code>用于获取文件的 <code>key</code>，如果带上<code>-w</code> 选项，则表示会将该对象的 <code>value</code> 进行存储。 带上<code>--stdin</code> 选项表示该命令从标准输入读取内容；若不指定此选项，则须在命令尾部给出待存储文件的路径。</p><p>从上面创建的对象中可以看到此命令输出的 <code>key</code> 是一个长度为 40 个字符的校验和。它是一个 <code>SHA-1</code> 哈希值——一个将待存储的数据外加一个头部信息<code>（header）</code>一起做 <code>SHA-1</code> 校验运算而得的校验和。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看objects目录</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">find</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.git/objects</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-type</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">f</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .git/objects/58/c9bdf9d017fcd178dc8c073cbfcbb7ff240d6c</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .git/objects/c2/00906efd24ec5e783bee7f23b5d7c941b0c12c</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>此时如果查看 <code>objects</code> 目录，可以找到分别与新内容对应的文件，<code>git</code> 存储内容的方式是一个文件对应一条内容，以该内容加上特定头部信息一起的 <code>SHA-1</code> 校验和为文件命名。校验和的前两个字符用于命名子目录，余下的 38 个字符则用作文件名。</p><h3 id="生成的文件存储的是什么" tabindex="-1">生成的文件存储的是什么 <a class="header-anchor" href="#生成的文件存储的是什么" aria-label="Permalink to &quot;生成的文件存储的是什么&quot;">​</a></h3><p>在上述创建的对象中，<code>git hash-object</code>会接受你传给它的内容，并只会返回可以存储在 <code>Git</code> 仓库中的唯一键，同时在 <code>objects</code> 目录下可以找到与新内容对应的文件，如下所示：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_hash.png" alt="git_hash"></p><p>查看一下执行<code>git hash-object</code>之后在 <code>git</code> 版本库中存储的内容及其类型，如下所示，我们可以看到这里拿到的 key 和上文中使用 <code>git add</code> 执行命令的 <code>key</code> 是一样的。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看在git版本库里存的内容</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">58</span><span style="color:#C3E88D;">c9</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># blob</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">58</span><span style="color:#C3E88D;">c9</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 111</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">c200</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># blob</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">c200</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 222</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>通过<code>git update-index</code>命令将通过<code>git hash-object</code>生成的对象加入暂存区进行暂存</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 将a.txt对应的key添加进暂存区</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">update-index</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--cacheinfo</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100644</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">58</span><span style="color:#C3E88D;">c9bdf9d017fcd178dc8c073cbfcbb7ff240d6c</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">a.txt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将b.txt对应的key添加进暂存区</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">update-index</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--cacheinfo</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100644</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">c200906efd24ec5e783bee7f23b5d7c941b0c12c</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">b.txt</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>执行完上述命令后我们可以看到，<code>a.txt</code> 和 <code>b.txt</code> 分别被添加进了暂存区。其中： <code>--add</code>：此前该文件不在暂存区，添加进暂存区 <code>--cacheinfo</code>：将要添加的文件位于数据库中，而不是本地目录下 100644：表示文件模式（100644 是普通文件，100755 是可执行文件，120000 是符号链接文件）</p><p>以上就是 <code>git add</code> 命令在底层的实现，总共分为两步：</p><ol><li>通过<code>git hash-object</code>命令将需要暂存的文件转换成 <code>git</code> 对象并进行存储，拿到这些文件的 <code>key</code></li><li>通过<code>git update-index</code>命令将这些对象加入到暂存区进行暂存</li></ol><p>这样便完成了 <code>git</code> 文件的暂存操作。</p><h2 id="git-commit-底层执行原理" tabindex="-1"><code>git commit</code> 底层执行原理 <a class="header-anchor" href="#git-commit-底层执行原理" aria-label="Permalink to &quot;\`git commit\` 底层执行原理&quot;">​</a></h2><p>通过<code>git write-tree</code>将暂存区内容写入一个 <code>tree</code> 对象</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">write-tree</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 4caaa1a9ae0b274fba9e3675f9ef071616e5b209  （tree object）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看这个key的类型为tree</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">caa</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># tree</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看这个tree对象的内容</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">caa</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 100644 blob 58c9bdf9d017fcd178dc8c073cbfcbb7ff240d6c    a.txt</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 100644 blob c200906efd24ec5e783bee7f23b5d7c941b0c12c    b.txt</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>此时 <code>git</code> 版本库的结构如下所示：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/git_commit.png" alt="git_commit"></p><p>通过 <code>git commit-tree</code>提交 <code>4caa</code> 这个 <code>tree</code> 对象</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">init commit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commit-tree</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#C3E88D;">caa</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 810c16a2dc94a8ac641e45bf6ab274cb37e52b21  (commit object)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看文件类型 为commit</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">810</span><span style="color:#C3E88D;">c</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># commit</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看其内容</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">810</span><span style="color:#C3E88D;">c</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># tree 4caaa1a9ae0b274fba9e3675f9ef071616e5b209</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># author mx &lt;zhongmeixiu@fenxianglife.com&gt; 1686306442 +0800</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># committer mx &lt;zhongmeixiu@fenxianglife.com&gt; 1686306442 +0800</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># init commit</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>此时 <code>git</code> 版本库的结构如下所示：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/write-tree.png" alt="write-tree"></p><p>我们可以知道此时的 <code>git</code> 版本库结构和上文中我们执行 <code>git commit</code> 之后是一样的，即 <code>git commit</code> 的底层执行原理其实也是执行了两步：</p><ol><li>执行<code>git write-tree</code>将暂存区内容写入一个 <code>tree</code> 对象</li><li>执行<code>git commit-tree</code>提交暂存区写入的 <code>tree</code> 对象</li></ol><p><code>Git</code> 所做的工作实质就是将被改写的文件保存为数据对象， 更新暂存区，记录树对象，最后创建一个指明了顶层树对象和父提交的提交对象。 这三种主要的 <code>Git</code> 对象（数据对象、树对象、提交对象）最初均以单独文件的形式保存在 <code>.git/objects</code> 目录下。 以上就是执行 <code>git add</code> 和 <code>git commit</code> 命令时，<code>git</code> 所做的工作实质。用一个图来表示大概就是如下这样：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/library.png" alt="library"></p><ul><li><code>git add files</code> 命令将文件放入暂存区</li><li><code>git commit</code> 命令给暂存区生成快照并提交</li></ul><h2 id="git-文件内容更新过程" tabindex="-1"><code>git</code> 文件内容更新过程 <a class="header-anchor" href="#git-文件内容更新过程" aria-label="Permalink to &quot;\`git\` 文件内容更新过程&quot;">​</a></h2><p>这一部分我们介绍一下 <code>git</code> 的三个分区（即工作目录，暂存区，<code>git</code> 版本库），以及 <code>git</code> 的变更记录是如何形成的。</p><p>接上文中的示例，此时三个分区的状态如下所示：</p><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/work.png" alt="work"></p><p>接下来我们通过更新一个文件内容看一下这个过程是怎样的</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 将a.txt的内容由111改为333</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">333</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">a.txt</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/work_1.png" alt="work_1"></p><p>从上图中我们可以看到，修改 <code>a.txt</code> 的内容后，<code>git</code> 版本库和暂存区都没有发生改变，此时我们执行 <code>git add a.txt</code> 命令，将其添加进暂存区，如下图所示，<code>git add a.txt</code> 命令执行之后，在 <code>git</code> 版本库中新增了一个 <code>blob object</code>，同时更新了索引的指向，即 <code>a.txt</code> 指向了新建的 <code>blob（55bd)</code></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 将修改内容添加进暂存区</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">a.txt</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 此时可以看到我们的git版本库新增了一个blob 其的key为</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 55bd0ac4c42e46cd751eb7405e12a35e61425550</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/work_2.png" alt="work_2"></p><p>最后我们提交这次更改，再看一下版本库是如何变化的：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">update</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 新增了一个tree  0fd247c919b0faa824e03cbef3b4b375d804e481</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 新增一个commit  59604511bc4a0e258fd54b784d38db1d0df63d7e</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://steinsgate.oss-cn-hangzhou.aliyuncs.com/work_3.png" alt="work_3"></p><p>由上图可以看到，执行 <code>git commit -m &#39;update&#39;</code>提交这次更改之后，<code>git</code> 版本库的过程如下：</p><ol><li>根据当前的索引生成一个 <code>tree object</code>，充当新提交的快照</li><li>新建一个 <code>commit object</code>，将这次 <code>commit</code> 的信息存储起来，并且其父提交指向上一个 <code>commit</code>，组成一条链，记录变更历史</li><li>将 <code>master</code> 分支的指针指向新的提交</li></ol>`,77)]))}const B=n(p,[["render",o]]);export{b as __pageData,B as default};
