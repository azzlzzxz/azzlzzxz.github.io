import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a5035e6c.js";const p="/assets/pnpm_one.a6d67173.jpg",e="/assets/hard_link.ffbeca4d.jpg",o="/assets/symbol_link.a34c10e5.jpg",r="/assets/pnpm_store.54bb0c2f.jpg",c="/assets/pnpm_pj.3e4a29a0.jpg",t="/assets/pnpm_form-data.39dfc2d5.jpg",i="/assets/pnpm_axios.7f12d709.jpg",C=JSON.parse('{"title":"PNPM","description":"","frontmatter":{},"headers":[],"relativePath":"node/npm/pnpm.md","lastUpdated":1699435470000}'),B={name:"node/npm/pnpm.md"},y=l('<h1 id="pnpm" tabindex="-1">PNPM <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;PNPM&quot;">​</a></h1><p><a href="https://pnpm.io/zh/" target="_blank" rel="noreferrer">pnpm 官网</a></p><h2 id="pnpm-介绍" tabindex="-1">pnpm 介绍 <a class="header-anchor" href="#pnpm-介绍" aria-label="Permalink to &quot;pnpm 介绍&quot;">​</a></h2><p>pnpm - performant npm，在 2017 年正式发布，定义为快速的，节省磁盘空间的包管理工具，开创了一套新的依赖管理机制，成为了包管理的后起之秀。</p><h2 id="节省磁盘空间" tabindex="-1">节省磁盘空间 <a class="header-anchor" href="#节省磁盘空间" aria-label="Permalink to &quot;节省磁盘空间&quot;">​</a></h2><p>使用 npm 时，依赖每次被不同的项目使用，都会重复安装一次。 而在使用 pnpm 时，依赖会被存储在内容可寻址的存储中，所以：</p><ol><li>如果你用到了某依赖项的不同版本，只会将不同版本间有差异的文件添加到仓库。 例如，如果某个包有 100 个文件，而它的新版本只改变了其中 1 个文件。那么 pnpm update 时只会向存储中心额外添加 1 个新文件，而不会因为仅仅一个文件的改变复制整新版本包的内容。</li><li>所有文件都会存储在硬盘上的某一位置。 当软件包被被安装时，包里的文件会硬链接到这一位置，而不会占用额外的磁盘空间。 这允许你跨项目地共享同一版本的依赖。</li></ol><p>因此，您在磁盘上节省了大量空间，这与项目和依赖项的数量成正比，并且安装速度要快得多！</p><p><img src="'+p+'" alt="pnpm_one"></p><h3 id="硬链接" tabindex="-1">硬链接 <a class="header-anchor" href="#硬链接" aria-label="Permalink to &quot;硬链接&quot;">​</a></h3><ol><li>硬链接就是多个文件名指向了同一个文件，这多个文件互为硬链接。</li><li>通过硬链接，不会产生额外的磁盘占用，并且，两个文件都能找到相同的磁盘内容</li><li>硬链接的数量没有限制，可以为同一个文件产生多个硬链接</li><li>硬链接的概念来自于 Unix 操作系统，它是指将一个文件 A 指针复制到另一个文件 B 指针中，文件 B 就是文件 A 的硬链接</li></ol><p><img src="'+e+'" alt="hard_link"></p><h3 id="软连接-符号链接" tabindex="-1">软连接(符号链接) <a class="header-anchor" href="#软连接-符号链接" aria-label="Permalink to &quot;软连接(符号链接)&quot;">​</a></h3><ol><li>软链接就是快捷方式，是一个单独文件。就像我们电脑桌面上的快捷方式，大小只有几字节，指向源文件，点击快捷方式，其实执行的就是源文件。</li><li>符号链接又称为软连接，如果为某个文件或文件夹 A 创建符号连接 B，则 B 指向 A。</li></ol><p><img src="'+o+'" alt="symbol_link"></p><h3 id="符号链接和硬链接的区别" tabindex="-1">符号链接和硬链接的区别 <a class="header-anchor" href="#符号链接和硬链接的区别" aria-label="Permalink to &quot;符号链接和硬链接的区别&quot;">​</a></h3><ol><li>硬链接仅能链接文件，而符号链接可以链接目录</li><li>硬链接在链接完成后仅和文件内容关联，和之前链接的文件没有任何关系。而符号链接始终和之前链接的文件关联，和文件内容不直接相关</li></ol><h3 id="node-环境对硬链接和符号链接的处理" tabindex="-1">node 环境对硬链接和符号链接的处理 <a class="header-anchor" href="#node-环境对硬链接和符号链接的处理" aria-label="Permalink to &quot;node 环境对硬链接和符号链接的处理&quot;">​</a></h3><ol><li>硬链接：硬链接是一个实实在在的文件，node 不对其做任何特殊处理，也无法区别对待，实际上，node 根本无从知晓该文件是不是一个硬链接</li><li>符号链接：由于符号链接指向的是另一个文件或目录，当 node 执行符号链接下的 JS 文件时，会使用原始路径。</li></ol><h2 id="pnpm-原理" tabindex="-1">pnpm 原理 <a class="header-anchor" href="#pnpm-原理" aria-label="Permalink to &quot;pnpm 原理&quot;">​</a></h2><p>pnpm 引入了另一套依赖管理策略：内容寻址存储。</p><p>该策略会将包安装在系统的全局 store 中，依赖的每个版本只会在系统中安装一次。</p><p><img src="'+r+`" alt="pnpm_store"></p><p>在引用项目 node_modules 的依赖时，会通过硬链接与符号链接在全局 store 中找到这个文件。</p><p>node_modules 中每个包的每个文件都是来自内容可寻址存储的硬链接。 假设您安装了依赖于 bar@1.0.0 的 foo@1.0.0。 pnpm 会将两个包硬链接到 node_modules 如下所示：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node_modules</span></span>
<span class="line"><span style="color:#BABED8;">└── .</span><span style="color:#FFCB6B;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">    ├── bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    │           ├── index.</span><span style="color:#FFCB6B;">js</span></span>
<span class="line"><span style="color:#BABED8;">    │           └── package.</span><span style="color:#FFCB6B;">json</span></span>
<span class="line"><span style="color:#BABED8;">    └── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">        └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">            └── foo </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo</span></span>
<span class="line"><span style="color:#BABED8;">                ├── index.</span><span style="color:#FFCB6B;">js</span></span>
<span class="line"><span style="color:#BABED8;">                └── package.</span><span style="color:#FFCB6B;">json</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="`+c+`" alt="pnpm_pj"></p><p>这是 node_modules 中的唯一的“真实”文件。 一旦所有包都硬链接到 node_modules，就会创建符号链接来构建嵌套的依赖关系图结构。</p><p>您可能已经注意到，这两个包都硬链接到一个 node_modules 文件夹（foo@1.0.0/node_modules/foo）内的子文件夹中。 这必要的：</p><ol><li>允许包自行导入自己。 foo 应该能够 require(&#39;foo/package.json&#39;) 或者 import * as package from &quot;foo/package.json&quot;。</li><li>避免循环符号链接。 依赖以及需要依赖的包被放置在一个文件夹下。 对于 Node.js 来说，依赖是在包的内部 node_modules 中或在任何其它在父目录 node_modules 中是没有区别的。</li></ol><p>安装的下一阶段是符号链接依赖项。 bar 将被符号链接到 foo@1.0.0/node_modules 文件夹：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node_modules</span></span>
<span class="line"><span style="color:#BABED8;">└── .</span><span style="color:#FFCB6B;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">    ├── bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    └── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">        └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">            ├── foo </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo</span></span>
<span class="line"><span style="color:#BABED8;">            └── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+t+`" alt="pnpm_form-data"></p><p>接下来，处理直接依赖关系。 foo 将被符号链接至根目录的 node_modules 文件夹，因为 foo 是项目的依赖项：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node_modules</span></span>
<span class="line"><span style="color:#BABED8;">├── foo </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> .</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">.</span><span style="color:#FFCB6B;">pnpm</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo</span></span>
<span class="line"><span style="color:#BABED8;">└── .</span><span style="color:#FFCB6B;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">    ├── bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    └── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">        └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">            ├── foo </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo</span></span>
<span class="line"><span style="color:#BABED8;">            └── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="`+i+`" alt="pnpm_axios"></p><p>这是一个非常简单的例子。 但是，无论依赖项的数量和依赖关系图的深度如何，布局都会保持这种结构。</p><p>让我们添加 qar@2.0.0 作为 bar 和 foo 的依赖项。 这是新的结构的样子：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node_modules</span></span>
<span class="line"><span style="color:#BABED8;">├── foo </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> .</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">.</span><span style="color:#FFCB6B;">pnpm</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo</span></span>
<span class="line"><span style="color:#BABED8;">└── .</span><span style="color:#FFCB6B;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">    ├── bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── qar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">qar@</span><span style="color:#F78C6C;">2.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">qar</span></span>
<span class="line"><span style="color:#BABED8;">    ├── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── foo </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">foo</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── bar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── qar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">qar@</span><span style="color:#F78C6C;">2.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">qar</span></span>
<span class="line"><span style="color:#BABED8;">    └── qar@</span><span style="color:#F78C6C;">2.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">        └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">            └── qar </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">&lt;store&gt;</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">qar</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>如你所见，即使图形现在更深（foo &gt; bar &gt; qar），但目录深度仍然相同。</p><p>这种布局乍一看可能很奇怪，但它与 Node 的模块解析算法完全兼容！ 解析模块时，Node 会忽略符号链接，因此当 foo@1.0.0/node_modules/foo/index.js 需要 bar 时，Node 不会使用在 foo@1.0.0/node_modules/bar 的 bar，相反，bar 是被解析到其实际位置（bar@1.0.0/node_modules/bar）。 因此，bar 也可以解析其在 bar@1.0.0/node_modules 中的依赖项。</p><p>这种布局的一大好处是只有真正在依赖项中的包才能访问。</p><h2 id="处理-peerdependencies" tabindex="-1">处理 peerDependencies <a class="header-anchor" href="#处理-peerdependencies" aria-label="Permalink to &quot;处理 peerDependencies&quot;">​</a></h2><p>pnpm 的最佳特征之一是，在一个项目中，package 的一个特定版本将始终只有一组依赖项。 这个规则有一个例外 -那就是具有 peer dependencies 的 package。</p><p>peer 依赖项（peer dependencies）会从依赖图中更高的已安装的依赖项中解析（resolve），因为它们与父级共享相同的版本。 这意味着，如果 foo@1.0.0 有两个 peers 依赖（bar@^1 和 baz@^1），那么它可能在一个项目中有多个不同的依赖项集合。</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> foo</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">parent</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> baz@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> foo</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">parent</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> baz@</span><span style="color:#F78C6C;">1.1</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;"> foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在上面的示例中， foo@1.0.0 已安装在 foo-parent-1 和 foo-parent-2 中。 这两个包都有依赖包 baz 和 bar, 但是它们却依赖着不同版本的 baz。 因此， foo@1.0.0 有两组不同的依赖项：一组具有 baz@1.0.0 ，另一组具有 baz@1.1.0。 若要支持这些用例，pnpm 必须有几组不同的依赖项，就去硬链接几次 foo@1.0.0。</p><p>通常，如果一个 package 没有 peer 依赖项（peer dependencies），它会被硬链接到其依赖项的软连接（symlinks）旁的 node_modules，就像这样：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node_modules</span></span>
<span class="line"><span style="color:#BABED8;">└── .</span><span style="color:#FFCB6B;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">    ├── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── foo</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── qux   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">qux@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">qux</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── plugh </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">plugh@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">plugh</span></span>
<span class="line"><span style="color:#BABED8;">    ├── qux@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    ├── plugh@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>但是，如果 foo 有 peer 依赖（peer dependencies），那么它可能就会有多组依赖项，所以我们为不同的 peer 依赖项创建不同的解析：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node_modules</span></span>
<span class="line"><span style="color:#BABED8;">└── .</span><span style="color:#FFCB6B;">pnpm</span></span>
<span class="line"><span style="color:#BABED8;">    ├── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0_bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;">baz@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── foo</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── bar   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── baz   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">baz@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">baz</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── qux   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">qux@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">qux</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── plugh </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">plugh@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">plugh</span></span>
<span class="line"><span style="color:#BABED8;">    ├── foo@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0_bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;">baz@</span><span style="color:#F78C6C;">1.1</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    │   └── node_modules</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── foo</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── bar   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">bar</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── baz   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">baz@</span><span style="color:#F78C6C;">1.1</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">baz</span></span>
<span class="line"><span style="color:#BABED8;">    │       ├── qux   </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">qux@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">qux</span></span>
<span class="line"><span style="color:#BABED8;">    │       └── plugh </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">../../</span><span style="color:#BABED8;">plugh@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">plugh</span></span>
<span class="line"><span style="color:#BABED8;">    ├── bar@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    ├── baz@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    ├── baz@</span><span style="color:#F78C6C;">1.1</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    ├── qux@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"><span style="color:#BABED8;">    ├── plugh@</span><span style="color:#F78C6C;">1.0</span><span style="color:#BABED8;">.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>我们创建 foo@1.0.0_bar@1.0.0+baz@1.0.0 或foo@1.0.0_bar@1.0.0+baz@1.1.0内到 foo 的软链接。 因此，Node.js 模块解析器将找到正确的 peers。</p><p>如果一个 package 没有 peer 依赖（peer dependencies），不过它的依赖项有 peer 依赖，这些依赖会在更高的依赖图中解析, 则这个传递 package 便可在项目中有几组不同的依赖项。</p><h2 id="npmrc" tabindex="-1">.npmrc <a class="header-anchor" href="#npmrc" aria-label="Permalink to &quot;.npmrc&quot;">​</a></h2><p>pnpm 的配置文件</p><h3 id="依赖提升设置" tabindex="-1">依赖提升设置 <a class="header-anchor" href="#依赖提升设置" aria-label="Permalink to &quot;依赖提升设置&quot;">​</a></h3><h4 id="hoist" tabindex="-1">hoist <a class="header-anchor" href="#hoist" aria-label="Permalink to &quot;hoist&quot;">​</a></h4><p>当 hoist 为 true 时，所有依赖项都会被提升到 node_modules/.pnpm/node_modules。 这使得 node_modules 所有包都可以访问 未列出的依赖项。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">hoist</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="hoist-pattern" tabindex="-1">hoist-pattern <a class="header-anchor" href="#hoist-pattern" aria-label="Permalink to &quot;hoist-pattern&quot;">​</a></h4><p>告诉 pnpm 哪些包应该被提升到 node_modules/.pnpm/node_modules。 默认情况下，所有包都被提升 —— 但是，如果您知道只有某些有缺陷的包具有幻影依赖，您可以使用此选项专门提升幻影依赖（推荐做法）。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">hoist-pattern[]</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> [*]</span></span>
<span class="line"><span style="color:#FFCB6B;">hoist-pattern[]</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;">*</span><span style="color:#C3E88D;">eslint</span><span style="color:#BABED8;">*</span></span>
<span class="line"><span style="color:#FFCB6B;">hoist-pattern[]</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;">*</span><span style="color:#C3E88D;">babel</span><span style="color:#BABED8;">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="public-hoist-pattern" tabindex="-1">public-hoist-pattern <a class="header-anchor" href="#public-hoist-pattern" aria-label="Permalink to &quot;public-hoist-pattern&quot;">​</a></h4><p>不同于 hoist-pattern 会把依赖提升到一个虚拟存储中的隐藏的模块目录中，public-hoist-pattern 将匹配的依赖提升至根模块目录中。 提升至根模块目录中意味着应用代码可以访问到幻影依赖，即使他们对解析策略做了不当的修改。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">public-hoist-pattern[]</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*eslint*</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*prettier*</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="shamefully-hoist" tabindex="-1">shamefully-hoist <a class="header-anchor" href="#shamefully-hoist" aria-label="Permalink to &quot;shamefully-hoist&quot;">​</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">shamefully-hoist</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># =</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">public-hoist-pattern[]</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="peer-dependency-设置" tabindex="-1">Peer Dependency 设置 <a class="header-anchor" href="#peer-dependency-设置" aria-label="Permalink to &quot;Peer Dependency 设置&quot;">​</a></h3><h4 id="auto-install-peers" tabindex="-1">auto-install-peers <a class="header-anchor" href="#auto-install-peers" aria-label="Permalink to &quot;auto-install-peers&quot;">​</a></h4><p>当值为 true 时，将自动安装任何缺少的非可选同级依赖关系。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">auto-install-peers</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="支持-pnp" tabindex="-1">支持 PnP <a class="header-anchor" href="#支持-pnp" aria-label="Permalink to &quot;支持 PnP&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">node-linker</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">pnp</span></span>
<span class="line"><span style="color:#BABED8;">symlink</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,73),D=[y];function b(d,u,m,F,E,A){return n(),a("div",null,D)}const g=s(B,[["render",b]]);export{C as __pageData,g as default};
