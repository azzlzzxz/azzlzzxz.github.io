import{_ as l,B as p,o as d,c as t,x as e,D as c,z as a,Q as n,a as o}from"./chunks/framework.a5035e6c.js";const N=JSON.parse('{"title":"IOC","description":"","frontmatter":{},"headers":[],"relativePath":"node/nest/ioc.md","lastUpdated":1714100134000}'),r={name:"node/nest/ioc.md"},i=n("",13),D=e("code",null,"Nest",-1),y=e("code",null,"IOC（Inversion of Control，控制反转）",-1),u=e("code",null,"Nest",-1),B=e("code",null,"（DI）",-1),F=e("code",null,"IOC",-1),_=n("",15);function b(A,h,C,I,m,E){const s=p("font");return d(),t("div",null,[i,e("p",null,[e("strong",null,[c(s,{color:"FF9D00"},{default:a(()=>[o("在 "),D,o(" 中，"),y,o("是一种设计模式，它用于管理和解决类之间的依赖关系。")]),_:1})])]),e("p",null,[e("strong",null,[c(s,{color:"FF9D00"},{default:a(()=>[u,o(" 使用依赖注入"),B,o("作为实现 "),F,o(" 的机制。依赖注入是一种设计模式，它允许将依赖项动态地注入到一个类中，而不是在类内部直接创建这些依赖项的实例。这样做的好处是可以实现松耦合的代码，提高可测试性和可维护性。")]),_:1})])]),_])}const f=l(r,[["render",b]]);export{N as __pageData,f as default};
