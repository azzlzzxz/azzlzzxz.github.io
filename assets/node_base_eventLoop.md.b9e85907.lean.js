import{_ as e,B as o,o as c,c as t,D as l,z as p,Q as n,a as r,x as s}from"./chunks/framework.a5035e6c.js";const i="/assets/Node_EventLoop.5567d011.jpg",y="/assets/diff.052d65d0.png",C=JSON.parse('{"title":"Node 的事件循环机制","description":"","frontmatter":{},"headers":[],"relativePath":"node/base/eventLoop.md","lastUpdated":1697681800000}'),F={name:"node/base/eventLoop.md"},D=n("",5),m=s("ul",null,[s("li",null,"timers: 执行 setTimeout 和 setInterval 中到期的 callback。"),s("li",null,"pending callback: 上一轮循环中少数的 callback 会放在这一阶段执行。"),s("li",null,"idle, prepare: 仅在内部使用。"),s("li",null,"poll: 最重要的阶段，执行 pending callback，在适当的情况下会阻塞在这个阶段。"),s("li",null,"check: 执行 setImmediate 的 callback。"),s("li",null,"close callbacks: 执行 close 事件的 callback，例如 socket.on(‘close’[,fn])或者 http.server.on('close, fn)。")],-1),b=n("",36),u=n("",9);function d(B,A,E,h,_,k){const a=o("font");return c(),t("div",null,[D,l(a,{color:"#5887ff"},{default:p(()=>[m]),_:1}),b,l(a,{color:"#FF4444"},{default:p(()=>[r(" 但是，如果你把这两个函数放入一个 I/O 循环内调用，setImmediate 总是被优先调用： 因为 I/O 操作是在 poll 阶段进行的，poll 阶段之后是 check（也就是调用 setImmediate）。 ")]),_:1}),u])}const v=e(F,[["render",d]]);export{C as __pageData,v as default};
