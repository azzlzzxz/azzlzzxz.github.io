import{_ as a,o as n,c as l,N as e}from"./chunks/framework.2f525601.js";const y=JSON.parse('{"title":"TailwindCss","description":"","frontmatter":{},"headers":[],"relativePath":"work/library/tailwind.md","lastUpdated":1729414590000}'),o={name:"work/library/tailwind.md"};function p(c,s,i,t,r,d){return n(),l("div",null,s[0]||(s[0]=[e(`<h1 id="tailwindcss" tabindex="-1">TailwindCss <a class="header-anchor" href="#tailwindcss" aria-label="Permalink to &quot;TailwindCss&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">相关资料</p><ul><li><p><a href="https://www.tailwindcss.cn/" target="_blank" rel="noreferrer"><u>TailwindCss 中文文档</u></a></p></li><li><p><a href="https://tailwindcss.com/" target="_blank" rel="noreferrer"><u>TailwindCss 英文文档</u></a></p></li></ul></div><h2 id="为什么选择-tailwindcss" tabindex="-1">为什么选择 <code>TailWindCss</code> <a class="header-anchor" href="#为什么选择-tailwindcss" aria-label="Permalink to &quot;为什么选择 \`TailWindCss\`&quot;">​</a></h2><ul><li><p>快速开发</p><ul><li><p>内置实用程序类：<code>Tailwind</code> 提供了大量的功能类，例如 <code>flex</code>、<code>px-4</code>、<code>mt-2</code>、<code>text-center</code> 等。你可以直接在 <code>HTML</code> 中使用这些类名，从而快速构建 <code>UI</code>，而无需编写自定义样式。</p></li><li><p>减少自定义 <code>CSS</code>：大多数情况下你不需要写自定义样式，因为 <code>Tailwind</code> 提供了足够的内置类。这加快了开发速度并简化了代码。</p></li></ul></li><li><p>避免 <code>CSS</code> 冲突</p><ul><li><p>局部化样式</p></li><li><p>命名冲突最小化</p></li></ul></li><li><p>小的生产环境 <code>CSS</code> 文件</p><p><code>Tailwind</code> 提供了自动的<code>“按需加载”</code>功能，生产环境的 <code>CSS</code> 文件仅包含页面中实际使用到的样式。</p></li><li><p>一致性强</p><ul><li><p>设计系统的约束：<code>Tailwind</code> 内置的样式基于统一的设计系统，如颜色、间距、字体大小等。这意味着整个应用在风格上非常一致，即使由不同的开发人员编写。</p></li><li><p>响应式设计：<code>Tailwind</code> 内置响应式工具类，如 <code>sm:</code>、<code>md:</code>、<code>lg:</code> 等，使得在不同设备上快速实现响应式设计变得非常容易。</p></li></ul></li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>通过 <code>npm</code> 安装 <code>tailwindcss</code>，然后创建你自己的 <code>tailwind.config.js</code> 配置文件。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tailwindcss</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">postcss</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">autoprefixer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tailwindcss</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><ul><li><code>postcss.config.js</code> 配置</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">tailwindcss</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">autoprefixer</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><code>tailwind.config.js</code> 配置</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./index.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/**/*.{js,jsx,ts,tsx}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">theme</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">extend</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> []</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>将加载 <code>Tailwind</code> 的指令添加到你的 <code>CSS</code> 文件中</li></ul><p>在你的主 <code>CSS</code> 文件中通过 <code>@tailwind</code> 指令添加每一个 <code>Tailwind</code> 功能模块。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">tailwind base</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">tailwind components</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#BABED8;">tailwind utilities</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="jit-模式" tabindex="-1"><code>jit</code> 模式 <a class="header-anchor" href="#jit-模式" aria-label="Permalink to &quot;\`jit\` 模式&quot;">​</a></h2><p><code>TailwindCss v3</code> 版本后默认使用 <code>mode: jit</code>（<code>Just In Time</code>）</p><div class="tip custom-block"><p class="custom-block-title">优点</p><ul><li><strong>即时生成样式</strong></li></ul><p>在 <code>JIT</code> 模式下，<code>Tailwind</code> 会根据你在项目中实际使用的类名即时生成 <code>CSS</code>。传统的编译器会预生成大量可能用到的 <code>CSS</code> 类，但 <code>JIT</code> 只生成你当前项目需要的类，大幅减少了生成的文件大小。</p><ul><li><strong>更快的构建速度</strong></li></ul><p>在开发过程中，<code>JIT</code> 模式可以根据需要即时生成新的样式类，避免了每次修改代码后进行完整的编译。这使得开发过程中样式的热加载和响应速度非常快，构建时间显著缩短。</p><ul><li><strong>更小的 <code>CSS</code> 文件</strong></li></ul><p>通过按需生成 <code>CSS</code> 类，<code>JIT</code> 生成的文件体积更小。仅会在生产环境中包含实际使用的 <code>CSS</code> 类，从而减少了无用代码的数量，大大降低了生成的 <code>CSS</code> 文件的大小。</p><ul><li><strong>任意值支持</strong></li></ul><p><code>JIT</code> 模式支持任意值语法，这意味着你可以在 <code>Tailwind</code> 类名中直接使用任何自定义的数值，比如颜色、间距、宽高等，而不需要提前配置。它允许开发者自由灵活地调整样式，不再局限于预定义的 <code>Tailwind</code> 配置。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">w-[38rem] h-[500px] bg-[#123456]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在 <code>JIT</code> 模式下，这类自定义的样式会即时生成，提供极大的自由度和可扩展性。</p><ul><li><strong>所有变体都可用</strong></li></ul><p><code>JIT</code> 模式使所有的 <code>Tailwind</code> 变体类都可以直接使用，而不需要提前在配置文件中启用。例如，响应式变体、悬停、焦点、活动等伪类都可以即时使用，并生成对应的样式，无需手动配置这些变体，它们会自动生成并生效。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hover:bg-blue-500 sm:bg-green-500 focus:ring</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div>`,18)]))}const u=a(o,[["render",p]]);export{y as __pageData,u as default};
