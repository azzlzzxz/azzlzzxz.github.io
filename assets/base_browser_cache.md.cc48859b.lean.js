import{_ as t,B as i,o as c,c as n,D as s,z as r,x as a,Q as l,a as e}from"./chunks/framework.a5035e6c.js";const p="/assets/cache.6f82399d.jpg",h="/assets/server_worker.cd04f871.png",d="/assets/memory_cache.8d236083.png",m="/assets/304.50c6a7ee.png",M=JSON.parse('{"title":"浏览器缓存机制","description":"","frontmatter":{},"headers":[],"relativePath":"base/browser/cache.md","lastUpdated":1697093424000}'),u={name:"base/browser/cache.md"},_=l("",33),f=a("br",null,null,-1),b=l("",24),C=a("h3",{id:"启发式缓存会引起什么问题",tabindex:"-1"},[e("启发式缓存会引起什么问题 "),a("a",{class:"header-anchor",href:"#启发式缓存会引起什么问题","aria-label":'Permalink to "启发式缓存会引起什么问题"'},"​")],-1),T=a("p",null,"考虑一个情况，假设你有一个文件没有设置缓存时间，在一个月前你更新了上个版本。这次发版后，你可能得等到 3 天后用户才看到新的内容了。如果这个资源还在 CDN 也缓存了，则问题会更严重。",-1),k=a("p",null,"所以，要给资源设置合理的缓存时间。不要不设置缓存，也不要设置过长时间的缓存。强缓存时间过长，则内容要很久才会覆盖新版本，缓存时间过短，服务器可能背不住。一般带 hash 的文件缓存时间可以长一点。",-1);function x(g,P,D,q,y,E){const o=i("font");return c(),n("div",null,[_,s(o,{color:"#FF4229"},{default:r(()=>[e("请注意 no-cache 指令很多人误以为是不缓存，这是不准确的，no-cache 的意思是可以缓存，但每次用应该去想服务器验证缓存是否可用。"),f]),_:1}),s(o,{color:"#FF9D00"},{default:r(()=>[e("no-store 才是不缓存内容。当在首部字段 Cache-Control 有指定 max-age 指令时，比起首部字段 Expires，会优先处理 max-age 指令。命中强缓存的表现形式：Firefox 浏览器表现为一个灰色的 200 状态码。Chrome 浏览器状态码表现为 200 (from disk cache)或是 200 OK (from memory cache)")]),_:1}),b,a("p",null,[a("strong",null,[s(o,{color:"FF9D00"},{default:r(()=>[e("注：只有在服务端没有返回明确的缓存策略时才会激活浏览器的启发式缓存策略。")]),_:1})])]),C,T,k])}const F=t(u,[["render",x]]);export{M as __pageData,F as default};
